#!meta

{"kernelInfo":{"defaultKernelName":"spiral","items":[{"aliases":[],"name":"spiral"}]}}

#!markdown

# lustre

#!fsharp

#!import ../../../polyglot/lib/fsharp/Notebooks.dib

#!markdown

## lustre

#!markdown

### attribute

#!spiral

nominal attribute t =
    `(
        backend_switch `(()) `({}) {
            Gleam = (fun () => global "import lustre/internals/vdom") : () -> ()
        }
        $'' : $'vdom.Attribute(`t)'
    )

#!markdown

### element

#!spiral

nominal element t =
    `(
        backend_switch `(()) `({}) {
            Gleam = (fun () => global "import lustre/element.{type Element}") : () -> ()
        }
        $'' : $'Element(`t)'
    )

#!markdown

### text

#!spiral

inl text forall t. (text : string) : element t =
    global "import lustre/element/html"
    $'element.text(!text)'

#!markdown

### on_click

#!spiral

inl on_click forall t. (msg : t) : attribute t =
    global "import lustre/event"
    $'event.on_click(!msg)'

#!markdown

### style

#!spiral

inl style forall t. (styles : list (string * string)) : attribute t =
    global "import lustre/attribute"
    inl styles = styles |> listm'.box
    $'attribute.style(!styles)'

#!markdown

### div

#!spiral

inl div forall t. (attributes : list (attribute t)) (children : list (element t)) : element t =
    global "import lustre/element/html"
    inl attributes = attributes |> listm'.box
    inl children = children |> listm'.box
    $'html.div(!attributes, !children)'

#!markdown

### p

#!spiral

inl p forall t. (attributes : list (attribute t)) (children : list (element t)) : element t =
    global "import lustre/element/html"
    inl attributes = attributes |> listm'.box
    inl children = children |> listm'.box
    $'html.p(!attributes, !children)'

#!markdown

### button

#!spiral

inl button forall t. (attributes : list (attribute t)) (children : list (element t)) : element t =
    global "import lustre/ui/button.{button}"
    inl attributes = attributes |> listm'.box
    inl children = children |> listm'.box
    $'button(!attributes, !children)'

#!markdown

### centre

#!spiral

inl centre forall t. (attributes : list (attribute t)) (children : element t) : element t =
    global "import lustre/ui/centre.{centre}"
    inl attributes = attributes |> listm'.box
    $'centre(!attributes, !children)'

#!markdown

### app

#!spiral

nominal app model msg = $'lustre.App(`model, `model, `msg)'

#!markdown

### simple

#!spiral

inl simple forall model msg.
    (init : model -> model)
    (update : model * msg -> model)
    (view : model -> element msg)
    : app model msg
    =
    global "import lustre"
    $'lustre.simple(!init, fn (a, b) { !update(#(a, b)) }, !view)'

#!markdown

### start

#!spiral

inl start id app =
    $'let assert Ok(_) = lustre.start(!app, !id, 0)' : ()

#!markdown

### model

#!spiral

type model = int

#!markdown

### init

#!spiral

inl init initial_count =
    if initial_count < 0
    then 0
    else initial_count

#!markdown

### msg

#!spiral

union msg =
    | Incr
    | Decr

#!markdown

### update

#!spiral

inl update n (model, msg) =
    match msg with
    | Incr => model + n
    | Decr => model - n

#!markdown

### view

#!spiral

inl view model =
    div [
        style [
            "display", "flex"
        ]
    ] [
        div [
            style [
                "display", "flex"
                "flex-direction", "column"
            ]
        ] [
            button [
                on_click Incr
            ] [
                text "+"
            ]
            p [
                style [
                    "text-align", "center"
                ]
            ] [
                model |> sm'.obj_to_string |> text
            ]
            button [
                on_click Decr
            ] [
                text "-"
            ]
        ]
    ]

#!markdown

### main'

#!spiral

inl main' id =
    inl app : _ model _ = simple init (update 1) view
    app |> start id

#!spiral

//// test
///! gleam -t javascript -d lustre=\">=4.6.0\" lustre_ui=\"1.0.0-rc.1\" gleam_json=\">=2.0.0\"

main' "#app_"

#!spiral

inl main' id =
    inl app : _ model _ = simple init (update 2) view
    app |> start id

#!spiral

//// test
///! gleam -t javascript -d lustre=\">=4.6.0\" lustre_ui=\"1.0.0-rc.1\" gleam_json=\">=2.0.0\"

main' "#app_"
