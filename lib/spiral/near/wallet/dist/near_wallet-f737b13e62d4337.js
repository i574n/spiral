let h=`function`,j=`undefined`,l=Object,k=Object.getPrototypeOf,i=undefined;var g=(async(f)=>{if(a!==i)return a;if(typeof f!==j&&k(f)===l.prototype)({module_or_path:f}=f);else console.warn(`using deprecated parameters for the initialization function; pass a single object instead`);if(typeof f===j){f=new URL(`near_wallet_bg.wasm`,import.meta.url)};const g=c();if(typeof f===`string`||typeof Request===h&&f instanceof Request||typeof URL===h&&f instanceof URL){f=fetch(f)};d(g);const {instance:m,module:n}=await b(await f,g);return e(m,n)});var f=(b=>{if(a!==i)return a;if(typeof b!==j&&k(b)===l.prototype)({module:b}=b);else console.warn(`using deprecated parameters for \`initSync()\`; pass a single object instead`);const f=c();d(f);if(!(b instanceof WebAssembly.Module)){b=new WebAssembly.Module(b)};const g=new WebAssembly.Instance(b,f);return e(g,b)});var c=(()=>{const a={};a.wbg={};return a});var e=((b,c)=>{a=b.exports;g.__wbindgen_wasm_module=c;return a});var d=((a,b)=>{});var b=(async(a,b)=>{if(typeof Response===h&&a instanceof Response){if(typeof WebAssembly.instantiateStreaming===h){try{return await WebAssembly.instantiateStreaming(a,b)}catch(b){if(a.headers.get(`Content-Type`)!=`application/wasm`){console.warn(`\`WebAssembly.instantiateStreaming\` failed because your server does not serve wasm with \`application/wasm\` MIME type. Falling back to \`WebAssembly.instantiate\` which is slower. Original error:\\n`,b)}else{throw b}}};const c=await a.arrayBuffer();return await WebAssembly.instantiate(c,b)}else{const c=await WebAssembly.instantiate(a,b);if(c instanceof WebAssembly.Instance){return {instance:c,module:a}}else{return c}}});let a;export default g;export{f as initSync}
